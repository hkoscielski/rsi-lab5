//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MojKlientWindow
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/MojKlientWindow")]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string cityField;
        
        private string firstNameField;
        
        private string indexField;
        
        private string lastNameField;
        
        private int yearOfBirthField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city
        {
            get
            {
                return this.cityField;
            }
            set
            {
                this.cityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName
        {
            get
            {
                return this.firstNameField;
            }
            set
            {
                this.firstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string index
        {
            get
            {
                return this.indexField;
            }
            set
            {
                this.indexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName
        {
            get
            {
                return this.lastNameField;
            }
            set
            {
                this.lastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int yearOfBirth
        {
            get
            {
                return this.yearOfBirthField;
            }
            set
            {
                this.yearOfBirthField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IRestService1")]
public interface IRestService1
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/Create", ReplyAction="http://tempuri.org/IRestService1/CreateResponse")]
    string Create(MojKlientWindow.Student student);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/Create", ReplyAction="http://tempuri.org/IRestService1/CreateResponse")]
    System.Threading.Tasks.Task<string> CreateAsync(MojKlientWindow.Student student);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/GetAll", ReplyAction="http://tempuri.org/IRestService1/GetAllResponse")]
    MojKlientWindow.Student[] GetAll();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/GetAll", ReplyAction="http://tempuri.org/IRestService1/GetAllResponse")]
    System.Threading.Tasks.Task<MojKlientWindow.Student[]> GetAllAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/GetById", ReplyAction="http://tempuri.org/IRestService1/GetByIdResponse")]
    MojKlientWindow.Student GetById(string index);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/GetById", ReplyAction="http://tempuri.org/IRestService1/GetByIdResponse")]
    System.Threading.Tasks.Task<MojKlientWindow.Student> GetByIdAsync(string index);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/Update", ReplyAction="http://tempuri.org/IRestService1/UpdateResponse")]
    string Update(string index, MojKlientWindow.Student student);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/Update", ReplyAction="http://tempuri.org/IRestService1/UpdateResponse")]
    System.Threading.Tasks.Task<string> UpdateAsync(string index, MojKlientWindow.Student student);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/Delete", ReplyAction="http://tempuri.org/IRestService1/DeleteResponse")]
    string Delete(string index);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/Delete", ReplyAction="http://tempuri.org/IRestService1/DeleteResponse")]
    System.Threading.Tasks.Task<string> DeleteAsync(string index);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/CreateJson", ReplyAction="http://tempuri.org/IRestService1/CreateJsonResponse")]
    string CreateJson(MojKlientWindow.Student student);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/CreateJson", ReplyAction="http://tempuri.org/IRestService1/CreateJsonResponse")]
    System.Threading.Tasks.Task<string> CreateJsonAsync(MojKlientWindow.Student student);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/GetJsonAll", ReplyAction="http://tempuri.org/IRestService1/GetJsonAllResponse")]
    MojKlientWindow.Student[] GetJsonAll();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/GetJsonAll", ReplyAction="http://tempuri.org/IRestService1/GetJsonAllResponse")]
    System.Threading.Tasks.Task<MojKlientWindow.Student[]> GetJsonAllAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/GetJsonById", ReplyAction="http://tempuri.org/IRestService1/GetJsonByIdResponse")]
    MojKlientWindow.Student GetJsonById(string index);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/GetJsonById", ReplyAction="http://tempuri.org/IRestService1/GetJsonByIdResponse")]
    System.Threading.Tasks.Task<MojKlientWindow.Student> GetJsonByIdAsync(string index);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/UpdateJson", ReplyAction="http://tempuri.org/IRestService1/UpdateJsonResponse")]
    string UpdateJson(string index, MojKlientWindow.Student student);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/UpdateJson", ReplyAction="http://tempuri.org/IRestService1/UpdateJsonResponse")]
    System.Threading.Tasks.Task<string> UpdateJsonAsync(string index, MojKlientWindow.Student student);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/DeleteJson", ReplyAction="http://tempuri.org/IRestService1/DeleteJsonResponse")]
    string DeleteJson(string index);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService1/DeleteJson", ReplyAction="http://tempuri.org/IRestService1/DeleteJsonResponse")]
    System.Threading.Tasks.Task<string> DeleteJsonAsync(string index);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IRestService1Channel : IRestService1, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RestService1Client : System.ServiceModel.ClientBase<IRestService1>, IRestService1
{
    
    public RestService1Client()
    {
    }
    
    public RestService1Client(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public RestService1Client(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RestService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RestService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string Create(MojKlientWindow.Student student)
    {
        return base.Channel.Create(student);
    }
    
    public System.Threading.Tasks.Task<string> CreateAsync(MojKlientWindow.Student student)
    {
        return base.Channel.CreateAsync(student);
    }
    
    public MojKlientWindow.Student[] GetAll()
    {
        return base.Channel.GetAll();
    }
    
    public System.Threading.Tasks.Task<MojKlientWindow.Student[]> GetAllAsync()
    {
        return base.Channel.GetAllAsync();
    }
    
    public MojKlientWindow.Student GetById(string index)
    {
        return base.Channel.GetById(index);
    }
    
    public System.Threading.Tasks.Task<MojKlientWindow.Student> GetByIdAsync(string index)
    {
        return base.Channel.GetByIdAsync(index);
    }
    
    public string Update(string index, MojKlientWindow.Student student)
    {
        return base.Channel.Update(index, student);
    }
    
    public System.Threading.Tasks.Task<string> UpdateAsync(string index, MojKlientWindow.Student student)
    {
        return base.Channel.UpdateAsync(index, student);
    }
    
    public string Delete(string index)
    {
        return base.Channel.Delete(index);
    }
    
    public System.Threading.Tasks.Task<string> DeleteAsync(string index)
    {
        return base.Channel.DeleteAsync(index);
    }
    
    public string CreateJson(MojKlientWindow.Student student)
    {
        return base.Channel.CreateJson(student);
    }
    
    public System.Threading.Tasks.Task<string> CreateJsonAsync(MojKlientWindow.Student student)
    {
        return base.Channel.CreateJsonAsync(student);
    }
    
    public MojKlientWindow.Student[] GetJsonAll()
    {
        return base.Channel.GetJsonAll();
    }
    
    public System.Threading.Tasks.Task<MojKlientWindow.Student[]> GetJsonAllAsync()
    {
        return base.Channel.GetJsonAllAsync();
    }
    
    public MojKlientWindow.Student GetJsonById(string index)
    {
        return base.Channel.GetJsonById(index);
    }
    
    public System.Threading.Tasks.Task<MojKlientWindow.Student> GetJsonByIdAsync(string index)
    {
        return base.Channel.GetJsonByIdAsync(index);
    }
    
    public string UpdateJson(string index, MojKlientWindow.Student student)
    {
        return base.Channel.UpdateJson(index, student);
    }
    
    public System.Threading.Tasks.Task<string> UpdateJsonAsync(string index, MojKlientWindow.Student student)
    {
        return base.Channel.UpdateJsonAsync(index, student);
    }
    
    public string DeleteJson(string index)
    {
        return base.Channel.DeleteJson(index);
    }
    
    public System.Threading.Tasks.Task<string> DeleteJsonAsync(string index)
    {
        return base.Channel.DeleteJsonAsync(index);
    }
}
